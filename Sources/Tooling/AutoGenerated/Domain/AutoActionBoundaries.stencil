// sourcery:inline:ActionBoundaries.AutoActionBoundaries
// swiftlint:disable superfluous_disable_command
// swiftlint:disable file_length

// MARK: DO NOT EDIT
{#
This template can be used to generate a static factory method for creation of an Actionsâ€˜
boundaries structure. The factory method is just syntactic sugar and meant to be used when
calling an action method of an Actor.

How to enable: Conform an action boundaries structure to `AutoActionBoundaries`

Example:
```
public struct Boundaries: AutoActionBoundaries {
    public let worker: EventLoop
}
```

Generated code:
```
public static func boundaries(
    worker: EventLoop
) -> Self {
    return Self(
        worker: worker
    )
}
```
#}

import Foundation
import NIO

{% for type in types.implementing.AutoActionBoundaries %}
// MARK: {{type.name}}

extension {{type.name}} {

    public static func boundaries(
    {% for variable in type.storedVariables %}
        {{variable.name}}{% if variable.name != variable.name|lowercase %} {{variable.name|lowercase}}{% endif %}: {{variable.typeName}}{% if not forloop.last %},{% endif %}
    {% endfor %}
    ) -> Self {
        return Self(
        {% for variable in type.storedVariables %}
            {{variable.name}}: {{variable.name|lowercase}}{% if not forloop.last %},{% endif %}
        {% endfor %}
        )
    }

}
{% endfor %}

// sourcery:end
